name: Deploy production

on:
  release:
    types:
      - published

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/run-tests

  build-push-ecr:
    name: Push
    uses: ./.github/workflows/build-push-ecr.yml
    needs: test
    with:
      environment: production
      service-name: uws
    secrets: inherit

  deploy-ecs:
    name: Deploy
    uses: ./.github/workflows/deploy-ecs.yml
    needs: build-push-ecr
    with:
      environment: production
      ecr-image: ${{ needs.build-push-ecr.outputs.ecr-image }}
      cluster-name: uws
      service-name: uws
      cluster-suffix: vx1WorUhn0id
      service-suffix: C16JVYsXlXZG
    secrets: inherit

  publish-multi-platform-image:
    name: Publish / DockerHub
    runs-on: ubuntu-latest
    needs:
      - deploy-ecs
    environment:
      name: production

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract Version from Tag
        id: extract-version
        uses: ./.github/actions/extract-version

      - name: Set Up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: image=moby/buildkit:buildx-stable-1

      - name: Build and push multi-platform image
        id: build-image
        run: |
          npm ci
          npm run build
          docker buildx create --use
          docker buildx build \
            --platform linux/amd64,linux/arm64/v8 \
            -t relaybox/core:${{ steps.extract-version.outputs.version }} \
            -t relaybox/core:latest \
            --push .

  update-package-version:
    name: Update package version
    runs-on: ubuntu-latest
    needs:
      - deploy-ecs
    permissions:
      contents: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Extract Version from Tag
        id: extract-version
        uses: ./.github/actions/extract-version

      - name: Update Package Version
        run: |
          npm version ${{ steps.extract-version.outputs.version }} --no-git-tag-version

      - name: Commit Changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: 'chore: update package version [skip ci]'
          commit_author: GitHub Actions <actions@github.com>
          branch: main
